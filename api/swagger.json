{
    "swagger": "2.0",
    "info": {
        "version": "1.0",
        "title": "Recruitment Registry",
        "license": {
            "name": "Apache 2.0"
        }
    },
    "basePath": "/api/v1.0",
    "schemes": [
        "http"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/auth/basic": {
            "x-swagger-router-controller": "auth.controller",
            "get": {
                "summary": "Authorization JWT",
                "operationId": "authenticateBasic",
                "parameters": [
                    {
                        "name": "Authorization",
                        "description": "Basic authentication header 'Basic ...' where '...' is base64 encoded string for 'username:password'",
                        "in": "header",
                        "required": true,
                        "type": "string"
                    }
                ],
                "description": "Returns JWT token that can be used as API key.  Prefix with 'Bearer ' before pasting.",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "token": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users": {
            "x-swagger-router-controller": "user.controller",
            "post": {
                "operationId": "createNewUser",
                "summary": "Creates a new user",
                "security": [
                    {
                        "admin": []
                    }
                ],
                "parameters": [
                    {
                        "name": "user",
                        "in": "body",
                        "description": "User specification",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response",
                        "schema": {
                            "description": "Selected user fields",
                            "type": "object",
                            "required": [
                                "id",
                                "username",
                                "role"
                            ],
                            "properties": {
                                "id": {
                                    "type": "integer"
                                },
                                "username": {
                                    "type": "string"
                                },
                                "role": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/users/me": {
            "x-swagger-router-controller": "user.controller",
            "get": {
                "operationId": "showCurrentUser",
                "summary": "Gets the current user",
                "security": [{
                    "self": []
                }],
                "responses": {
                    "200": {
                        "description": "Successul response",
                        "schema": {
                            "$ref": "#/definitions/user"
                        }
                    }
                }
            },
            "put": {
                "operationId": "updateCurrentUser",
                "summary": "Updates the current user",
                "security": [{
                    "self": []
                }],
                "parameters": [{
                    "name": "user",
                    "in": "body",
                    "description": "User fields to be updated",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/userUpdate"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "Successul response",
                        "schema": {
                            "type": "object",
                            "maxProperties": 0
                        }
                    }
                }
            }
        },
        "/users/password": {
            "x-swagger-router-controller": "user.controller",
            "post": {
                "operationId": "resetPassword",
                "summary": "Resets the password",
                "parameters": [{
                    "name": "resetInfo",
                    "in": "body",
                    "description": "Reset token and new password",
                    "required": true,
                    "schema": {
                        "type": "object",
                        "required": [
                            "token",
                            "password"
                        ],
                        "properties": {
                            "token": {
                                "type": "string",
                                "minLength": 1
                            },
                            "password": {
                                "type": "string",
                                "minLength": 1
                            }
                        }
                    }
                }],
                "responses": {
                    "201": {
                        "description": "Successul response",
                        "schema": {
                            "$ref": "#/definitions/emptyObject"
                        }
                    }
                }
            }
        },
        "/surveys": {
            "x-swagger-router-controller": "survey.controller",
            "post": {
                "summary": "Creates a new survey",
                "operationId": "createSurvey",
                "security": [
                    {
                        "admin": []
                    }
                ],
                "parameters": [
                    {
                        "name": "newSurvey",
                        "in": "body",
                        "description": "Definition of a new survey.  Existing questions have 'id' only and new questions have 'content' only.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/newSurvey"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response",
                        "schema": {
                            "description": "Survey id",
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "integer"
                                }
                            }

                        }
                    }
                }
            }
        },
        "/surveys/empty/{name}": {
            "x-swagger-router-controller": "survey.controller",
            "get": {
                "summary": "Get named survey information",
                "operationId": "getEmptySurvey",
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successul response",
                        "schema": {
                            "$ref": "#/definitions/survey"
                        }
                    }
                }
            }
        },
        "/surveys/{name}": {
            "x-swagger-router-controller": "survey.controller",
            "get": {
                "summary": "Get named survey with answers",
                "operationId": "getSurveyByName",
                "security": [
                    {
                        "participant": []
                    }
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successul response",
                        "schema": {
                            "$ref": "#/definitions/survey"
                        }
                    }
                }
            }
        },
        "/answers": {
            "x-swagger-router-controller": "answer.controller",
            "post": {
                "description": "This persists answers to survey questions.  Old answers are soft deleted.  For each question for which there is no answer property, any existing answer will be soft deleted.",
                "summary": "Creates answers",
                "operationId": "createAnswers",
                "security": [{
                    "participant": []
                }],
                "parameters": [{
                    "name": "surveyAnswers",
                    "in": "body",
                    "description": "Array of answers",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/surveyAnswers"
                    }
                }],
                "responses": {
                    "201": {
                        "$ref": "#/responses/emptySuccess"
                    },
                    "400": {
                        "$ref": "#/responses/badRequest"
                    },
                    "401": {
                        "$ref": "#/responses/unauthorized"
                    },
                    "403": {
                        "$ref": "#/responses/forbidden"
                    },
                    "422": {
                        "$ref": "#/responses/unprocessable"
                    },
                    "500": {
                        "$ref": "#/responses/internal"
                    }
                }
            }
        },
        "/ethnicities": {
            "x-swagger-router-controller": "ethnicity.controller",
            "get": {
                "summary": "List available ethnicities",
                "operationId": "getEthnicities",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/genders": {
            "x-swagger-router-controller": "gender.controller",
            "get": {
                "summary": "List available genders",
                "operationId": "getGenders",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/registries/user-profile": {
            "x-swagger-router-controller": "registry.controller",
            "post": {
                "summary": "Creates a registry user profile",
                "operationId": "createProfile",
                "parameters": [
                    {
                        "name": "newUserProfile",
                        "in": "body",
                        "description": "Registration information of new user",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/newUserProfile"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful response",
                        "schema": {
                            "description": "User id",
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "integer"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Updates a registry user profile",
                "operationId": "updateProfile",
                "security": [{
                    "participant": []
                }],
                "parameters": [
                    {
                        "name": "updateUserProfile",
                        "in": "body",
                        "description": "Update information of user",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/updateUserProfile"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "description": "Empty object",
                            "type": "object",
                            "maxProperties": 0
                        }
                    }
                }
            }
        },
        "/registries/user-profile/{registryName}": {
            "x-swagger-router-controller": "registry.controller",
            "get": {
                "summary": "Get user and named survey information",
                "operationId": "getProfile",
                "security": [
                    {
                        "participant": []
                    }
                ],
                "parameters": [
                    {
                        "name": "registryName",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/userProfile"
                        }
                    }
                }
            }
        },
        "/reset-tokens": {
            "x-swagger-router-controller": "reset-token.controller",
            "post": {
                "summary": "Generate reset token and e-mail",
                "operationId": "resetToken",
                "parameters": [{
                    "name": "email",
                    "in": "body",
                    "description": "User email for password reset",
                    "required": true,
                    "schema": {
                        "type": "object",
                        "required": ["email"],
                        "properties": {
                            "email": {
                                "type": "string",
                                "format": "email"
                            }
                        }
                    }
                }],
                "responses": {
                    "201": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/emptyObject"
                        }
                    }
                }
            }
        }

    },
    "securityDefinitions": {
        "admin": {
            "type": "apiKey",
            "in": "header",
            "name": "Authorization"
        },
        "participant": {
            "type": "apiKey",
            "in": "header",
            "name": "Authorization"
        },
        "self": {
            "type": "apiKey",
            "in": "header",
            "name": "Authorization"
        }
    },
    "responses": {
        "unauthorized": {
            "description": "User is not authenticated.",
            "schema": {
                "$ref": "#/definitions/error"
            }
        },
        "forbidden": {
            "description": "User does not have permission.",
            "schema": {
                "$ref": "#/definitions/error"
            }
        },
        "badRequest": {
            "description": "Invalid request parameters.",
            "schema": {
                "$ref": "#/definitions/error"
            }
        },
        "unprocessable": {
            "description": "Request cannot be fullfilled",
            "schema": {
                "$ref": "#/definitions/error"
            }
        },
        "emptySuccess": {
            "description": "Successful response.",
            "schema": {
                "$ref": "#/definitions/emptyObject"
            }
        },
        "internal": {
            "description": "Unexpected error.",
            "schema": {
                "$ref": "#/definitions/error"
            }
        }
    },
    "definitions": {
        "error": {
            "type": "object",
            "required": [
                "message"
            ],
            "properties": {
                "message": {
                    "type": "string"
                }
            },
            "additionalProperties": true
        },
        "user": {
            "type": "object",
            "properties": {
                "username": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "email": {
                    "type": "string",
                    "format": "email"
                },
                "zip": {
                    "type": ["string", "null"]
                },
                "ethnicity": {
                    "type": ["string", "null"]
                },
                "gender": {
                    "type": ["string", "null"]
                }
            }
        },
        "userUpdate": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "email": {
                    "type": "string",
                    "format": "email"
                },
                "zip": {
                    "type": ["string", "null"]
                },
                "ethnicity": {
                    "type": ["string", "null"]
                },
                "gender": {
                    "type": ["string", "null"]
                }
            }
        },
        "newSurvey": {
            "type": "object",
            "required": [
                "name",
                "questions"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "questions": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "content": {
                                "type": "object",
                                "required": [
                                    "text",
                                    "type"
                                ],
                                "properties": {
                                    "text": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    },
                                    "choices": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        },
                        "minProperties": 1,
                        "maxProperties": 1
                    },
                    "minLength": 1
                }
            }
        },
        "choice": {
            "type": "object",
            "required": [
                "id",
                "text"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "text": {
                    "type": "string"
                }
            }
        },
        "answer": {
            "type": "object",
            "properties": {
                "choice": {
                    "type": "integer",
                    "minimum": 1
                },
                "choices": {
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "minimum": 1
                    }
                },
                "textValue": {
                    "type": "string"
                },
                "boolValue": {
                    "type": "boolean"
                }
            },
            "minProperties": 1,
            "maxProperties": 1
        },
        "question": {
            "type": "object",
            "required": [
                "id",
                "text",
                "type"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "text": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "choices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/choice"
                    }
                },
                "answer": {
                    "$ref": "#/definitions/answer"
                }
            }
        },
        "linkedAnswer": {
            "type": "object",
            "required": [
                "questionId"
            ],
            "properties": {
                "questionId": {
                    "type": "integer",
                    "minimum": 1
                },
                "answer": {
                    "$ref": "#/definitions/answer"
                }
            }
        },
        "survey": {
            "type": "object",
            "required": [
                "id",
                "name",
                "questions"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "questions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/question"
                    },
                    "minLength": 1
                }
            }
        },
        "newUserProfile": {
            "type": "object",
            "required": [
                "user",
                "surveyId"
            ],
            "properties": {
                "user": {
                    "$ref": "#/definitions/user"
                },
                "surveyId": {
                    "type": "integer"
                },
                "answers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/linkedAnswer"
                    }
                }
            }
        },
        "updateUserProfile": {
            "type": "object",
            "required": [
                "user",
                "surveyId"
            ],
            "properties": {
                "user": {
                    "$ref": "#/definitions/userUpdate"
                },
                "surveyId": {
                    "type": "integer"
                },
                "answers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/linkedAnswer"
                    }
                }
            }
        },
        "surveyAnswers": {
            "type": "object",
            "required": [
                "surveyId",
                "answers"
            ],
            "properties": {
                "surveyId": {
                    "type": "integer",
                    "minimum": 1
                },
                "answers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/linkedAnswer"
                    },
                    "minItems": 1
                }
            }
        },
        "userProfile": {
            "type": "object",
            "properties": {
                "user": {
                    "$ref": "#/definitions/user"
                },
                "survey": {
                    "$ref": "#/definitions/survey"
                }
            }
        },
        "emptyObject": {
            "type": "object",
            "maxProperties": 0
        }
    }
}